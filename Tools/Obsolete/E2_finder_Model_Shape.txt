@name E2 finder Model Shape
@inputs 
@outputs E2Count Scale
@persist P:array E2Count
@trigger 
interval(200)

OldP=P:clone()
findByClass("gmod_wire_expression2")
P=findToArray()
if (P:count()!=OldP:count() | P[P:count(),entity]!=OldP[P:count(),entity]){
    E2Count=P:count()
    hint(toString(E2Count),3)
}
for (I=1,P:count()>OldP:count() ? P:count() : OldP:count()){
    Target=P[I,entity]

    if (P:count()!=OldP:count() | P[P:count(),entity]!=OldP[P:count(),entity]){

        if (!Target){
            holoDelete(I)
        }
        elseif (!holoEntity(I)){
                holoCreate(I)
                holoVisible(I,players(),0)
                holoVisible(I,owner(),1)
                holoMaterial(I,"hlmv/debugmrmwireframe")
                holoDisableShading(I,1)
                holoColor(I,vec(77,1,53))
        }
        holoModel(I,Target:model())
    }
    Dist=holoEntity(I):boxCenterW():distance(owner():pos())
    Box=(1/Target:boxSize()/2)*70
    Scale=(1-(1/(Dist/300 + 1)))*1.5
    holoScale(I,vec(1)*Box*Scale+vec(1.01))
    #holoAlpha(I,(1-Dist/200)*155 + 100)    
    holoPos(I,Target:pos())
    holoAng(I,Target:angles())
} 


@name Invisible BlackRoom 4 Privacy Edition
@outputs PlayerArray:array [BoxSize]:vector
@persist [Prop E Marker]:entity HoloSeperation EBottom [BoxSize BoxBoxCenter]:vector Whitelist:array
@model models/sprops/cuboids/height06/size_1/cube_6x6x6.mdl

if (first()){
    runOnTick(1)   
    E = entity()
    EBottom = E:boxSize():z()/2
    propSpawnUndo(0)
    
    Prop = propSpawn("models/sprops/cuboids/height06/size_1/cube_6x6x6.mdl", 1)
    Marker = propSpawn("models/sprops/cuboids/height06/size_1/cube_6x6x6.mdl", E:toWorld( vec( 50, 50, 50)), 1)
    Marker:setAlpha(0)
    noCollideAll( Marker, 1)
    
    holoCreate(100)
    holoColor(100, vec(105,0,75))
    holoPos(100, Marker:boxCenterW())
    holoAng(100, Marker:angles())
    holoMaterial(100, "models/wireframe")
    holoModel(100,"models/editor/axis_helper.mdl")
    holoParent(100, Marker)
    
    Whitelist = array(owner())
    
    for(I = 1, 4){
        holoCreate(I)
        holoAng(I, ang())
        holoModel(I, "models/hunter/blocks/cube8x8x8.mdl")
    }
    BoxBoxCenter = holoEntity(2):boxCenter()
    holoMaterial(1,"models/wireframe")
    holoColor(1,vec(20))
    
    holoMaterial(2,"engine/writez")
    holoColor(2,vec(255))
     
    
    holoMaterial(3,"lights/white")
    holoColor(3,vec(0))
    
    holoMaterial(4,"models/wireframe")
    holoColor(4,vec(50))

    HoloSeperation = 0.644
}

if (Marker:isPlayerHolding() | E:isPlayerHolding() | first()){
    holoAng(100, ang())
    
    BoxSize = toLocal( E:pos() - E:up() * EBottom, ang(), Marker:pos(), ang()) * vec(2, 2, 1)
    BoxSize = vec(abs(BoxSize:x()), abs(BoxSize:y()), abs(BoxSize:z())) 
    for(I = 1, 4){
        HoloOffset = vec(HoloSeperation) * (I - 1)
        holoScaleUnits(I, sign(2.5 - I) * (BoxSize - HoloOffset) * 1.0013)
        holoPos(I, E:pos() + vec(0,0,BoxSize:z() * 0.5 - EBottom) - BoxBoxCenter * holoScale(I))
    }
} else {
    Marker:propFreeze(1)
    E:propFreeze(1)
}
if (findCanQuery()){
    Pos = E:pos() + vec(0,0,BoxSize:z() * 0.5 - EBottom)
    findIncludeClass("player")
    findExcludeEntities(Whitelist)
    findInBox(Pos + BoxSize * 0.5, Pos - BoxSize * 0.5)
    PlayerArray = findToArray()
}
PlayerCount = PlayerArray:count()
if (PlayerCount){
    for(I = 1, PlayerCount){
        Target = PlayerArray[I, entity]
        Prop:setPos(Target:boxCenterW())
    }
} else {
    Prop:setPos(E:pos() + vec(0,0,50))
}


@name stop Props
@inputs 
@outputs Props:array TargetI Prop:entity
@persist [Me E]:entity TargetI
@model models/sprops/misc/tubes/size_5/tube_96x6.mdl

function void entity:moveTo(){
    This:applyForce(  (-This:vel() / 3) * This:mass())
}
function entity:face(Ang:angle)
{
    TarQ = quat(Ang)
    CurQ = quat(This)
    Q = TarQ/CurQ
    V = This:toLocal(rotationVector(Q)+This:pos())
    This:applyTorque((V*30 - This:angVelVector())*25*This:inertia())
}
if(first()){
    
runOnTick(1)
timer("changeTarget", 1)
    propSpawnUndo(0)
    E = entity()
    #noCollideAll(E, 1)
    Me = owner()
    E:setMaterial("models/wireframe")
}
E:setAng(ang(0,E:angles():yaw() + 1,0))


if(findCanQuery()){
    findIncludePlayerProps(Me)
    findExcludePlayer(Me)
    findInSphere(E:boxCenterW(), E:boxSize():z()/2)
    Props = findToArray()
    
    TargetI = (TargetI + 1) % Props:count()
    Prop = Props[TargetI + 1, entity]
    #Props = Props:add(NewProps)
}
if(!Props:count()){
    E:setColor(vec(0,255,0))
} else {
    E:setColor(vec(255,0,0))
    Prop:applyForce( -Prop:vel() * 5000 * Prop:mass())
}
#E:propNotSolid(!Me:isFlashlightOn())
if (clk("changeTarget")){
    
    timer("changeTarget", 500)
}
    

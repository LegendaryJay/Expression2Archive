@name Advanced Protection
@persist [Me PushProp StopProp]:entity BoomShield:array ShieldI ShieldMode PropShield:array ShieldHint BreakMode PushMode PushTarget:entity PushI
runOnTick(1)
runOnLast(1)
Me=owner()
if (last()){
    StopProp:propDelete()
    PushProp:propDelete()
}
if (!StopProp | !PushProp){
    timer("!Shield",400)
}
if (clk("!Shield")){
    if (!StopProp){
        StopProp=propSpawn("models/sprops/cuboids/height06/size_1/cube_6x6x6.mdl",entity():pos(),1)
        StopProp:setAlpha(0)
    }
    if (!PushProp){
        PushProp=propSpawn("models/sprops/cuboids/height06/size_1/cube_6x6x6.mdl",entity():toWorld(vec(0,0,50)),1)
        PushProp:propNotSolid(1)
        PushProp:setAlpha(0)
    }
    
}

if (findCanQuery()){
    if (ShieldMode){  
        findClearBlackList()
        findClearWhiteList()
        findIncludeClass("rpg_missile")
        findIncludeClass("crossbow_bolt")
        
        findIncludeClass("npc_grenade")
        findIncludeClass("prop_combine_ball")
        findIncludeClass("bb_thrown")
        findIncludeClass("grenade_ar2")
        
        findIncludeClass("npc_satchel")
        

        findExcludePlayerProps(owner())
        findInSphere(Me:boxCenterW(),600)
    
        BoomShield=findToArray()    
    }
    else{
        findClearBlackList()
        findClearWhiteList()
        findIncludeClass("prop_physics")
        findInSphere(owner():boxCenterW(),150)
        
        findExcludePlayerProps(owner())
        findSortByDistance(owner():boxCenterW())
        PropShield=findToArray()
    }
    ShieldMode=!ShieldMode
}
for (ShieldI=1,PropShield:count()){
    PropTarget=PropShield[ShieldI,entity]
    if (PropTarget:isPlayerHolding() & PropTarget:owner()!=owner() & !Me:inNoclip() & PropTarget:vel():length()>50){
        if (!ShieldHint){
            ShieldHint=1
            hint("AntiProp Noclip Active",2)
        }
        stoptimer("AntiProp")
        timer("AntiProp",500)
        concmd("AntiProp")
        if (ShieldI>10){break}
    }
}

if (clk("AntiProp") & owner():inNoclip()){
    concmd("AntiProp")
    hint("AntiProp Noclip Deactivated",2)
    ShieldHint=0
}
for (ShieldI=1,BoomShield:count()){
    Boom=BoomShield[ShieldI,entity]
    if (Boom:type()=="npc_satchel" & !BreakMode){
        Break=propSpawn("models/props_junk/gascan001a.mdl",Boom:boxCenterW()+Boom:vel()/30,1)
        Break:propBreak()
        BreakMode=1
        stoptimer("Break")
        timer("Break",100)
    }
    elseif (Boom:type()=="rpg_missile" | Boom:type()=="crossbow_bolt" | Boom:type()=="npc_grenade_bugbait" | Boom:type()=="grenade_ar2"){
        StopProp:setPos(Boom:boxCenterW()+Boom:vel()/30)
    }
    elseif (!PushMode){
        PushMode=1
        StopProp:setPos(Boom:boxCenterW()+Boom:vel()/30)
        PushTarget=Boom
    }
    Cancel=1
}
if (PushMode == 1){
    PushDist=(owner():boxCenterW()-PushTarget:pos()):length()
    if (PushTarget & PushDist<600){
        PushI++
        if (PushI<5){
            StopProp:setPos(entity():toWorld(vec(0,0,44)))
            PushProp:propNotSolid(0)
            PushProp:setMass(PushTarget:mass())
            PushProp:propFreeze(0)
        }
        elseif (PushI<10){
            PushProp:setPos(PushTarget:nearestPoint(owner():boxCenterW()))
        }
        elseif (PushI<15){
            PushProp:applyForce((-PushProp:pos()+PushTarget:boxCenterW()+PushTarget:vel()/25)*5000)
        }
        else {
            PushI=0  
        }
    }
    else {
        PushMode=0
        PushI=0   
        PushProp:setPos(entity():toWorld(vec(0,0,50)))
        PushProp:propNotSolid(1)
        PushProp:setMass(1)
        PushProp:propFreeze(1)
        PushProp:setAng(ang())
    }
}

    
if (clk("Break")){BreakMode=0}
if(!Cancel){
    StopProp:setPos(entity():pos() + vec(0,0,44))
}



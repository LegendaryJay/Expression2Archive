@name 
@inputs 
@outputs Ratio
@persist [Prop E]:entity TimerLength Moving MoveSpeed CoveredDist WaypointTable:table Direction DistArray:array
@persist TargetPosIdx [LocMixA LocMixB]:vector TargetDist
@persist [FromTable TargetTable]:table WaypointCount PauseNext ReverseNext
@model 

if (first()){
    function addWaypoint(Angle:angle, Position:vector, WaitTime){
        TempTable = table()
        TempTable["ang", angle] = Angle
        TempTable["pos", vector] = Position
        TempTable["pause", number] = WaitTime
        WaypointTable:pushTable(TempTable:clone())
        WaypointCount++
        
    }
    
    
    Loop = 0
    MoveSpeed = 0.7
    
    E = entity()
    
    addWaypoint(ang(), E:toWorld(vec(0,     0, 200)), 300)
    addWaypoint(ang(), E:toWorld(vec(200,   0, 300)), 20)
    addWaypoint(ang(), E:toWorld(vec(200, 200, 200)), 0)
    addWaypoint(ang(), E:toWorld(vec(200, 200, 200)), 0)
    #addWaypoint(ang(), E:toWorld(vec(0,   200, 200)), 0)
    
    #include "lib/applyForce"
    runOnTick(1)
    propSpawnUndo(0)
    
    
    Prop = propSpawn("models/sprops/cuboids/height06/size_5/cube_30x30x6.mdl", WaypointTable[1,table]["pos",vector], WaypointTable[1,table]["ang",vector]:toAngle(), 1)  
    Prop:setMass(50000)
    
    
    function stopMovement(PauseLength){
        timer("pause", PauseLength)
        Prop:propFreeze(1)
        Moving = 0
        
    }
    
    if (Loop){
        function nextMix(){
            if(PauseNext){
                PauseNext = 0
                stopMovement(TimerLength)
            } else {
                FromPosIdx = TargetPosIdx
                FromTable = WaypointTable[FromPosIdx, table]
                
                TargetPosIdx = TargetPosIdx % WaypointCount + 1
                TargetTable  = WaypointTable[TargetPosIdx, table]
                
                if (TargetTable["pause", number] > 0){
                    TimerLength = TargetTable["pause", number]
                    PauseNext = 1
                }
                LocMixB = FromTable["pos", vector]
                LocMixA = TargetTable["pos", vector]
                
                TargetDist = LocMixA:distance(LocMixB)
                CoveredDist = 0
                Ratio = 0
            
            }

        }
    } else {
        function nextMix(){
            Limit = ((Direction == 1) ? WaypointCount : 1)
            
            if (ReverseNext | PauseNext){
                
                if (ReverseNext){
                    Direction = -Direction
                    ReverseNext = 0
                }
                
                if(PauseNext){
                    PauseNext = 0
                    stopMovement(TimerLength)
                }
            } else {
                FromPosIdx = TargetPosIdx
                FromTable = WaypointTable[FromPosIdx, table]
                
                TargetPosIdx += Direction 
                TargetTable  = WaypointTable[TargetPosIdx, table]
                
                if (TargetTable["pause", number] > 0){
                    
                    TimerLength = TargetTable["pause", number]
                    PauseNext = 1
                }
                if (TargetPosIdx == Limit){
                    ReverseNext = 1
                    
                }  
                LocMixB = FromTable["pos", vector]
                LocMixA = TargetTable["pos", vector]
                
                TargetDist = LocMixA:distance(LocMixB)
                CoveredDist = 0
                Ratio = 0
            
            }
            

        }
    }
    
    function startMovement(){
        Moving = 1
        Prop:propFreeze(0)
        nextMix()
    }
    
    TargetPosIdx = 1
    Direction = 1
    startMovement()
}


 
if (Moving){
    if (TargetDist){
        CoveredDist = clamp(CoveredDist + MoveSpeed, 0, TargetDist)
        Ratio = CoveredDist/TargetDist
    } else {
        Ratio = Ratio + 0.01
    }
    if (Ratio >= 1){
        nextMix()
    }
    Prop:moveTo(mix(LocMixA, LocMixB, Ratio))
    Prop:face(ang())
    
} elseif (clkName() == "pause"){
    startMovement()
}
